@attribute [Route(PageRoutes.Presidents)]
@rendermode InteractiveServer
@using Client.Utils
@using Data.Models
@inherits Client.Utils.BasePageWithPagination<Data.Models.President>

<h1>Presidentes</h1>
@if (!LoadingData)
{
    <FluentDataGrid Loading="true" ItemsProvider="@DataProvider" Pagination="@Pagination" GenerateHeader="GenerateHeaderOption.Sticky" TGridItem="President">
        <PropertyColumn Property="@(p => p.Id)" Sortable="true" Title="ID"/>
        <PropertyColumn Property="@(p => $"{p.Name} {p.LastName}")" Sortable="true" Title="Nombre completo"/>
        <PropertyColumn Property="@(p => p.StartPeriodDate.ToString("dd/MM/yyyy"))" Title="Fecha de inicio del periodo"/>
        <PropertyColumn Property="@(p => p.EndPeriodDate != null ? p.EndPeriodDate.Value.ToString("dd/MM/yyyy") : "" )" Title="Fecha de fin del periodo"/>
        <PropertyColumn Property="@(p => p.PoliticalParty)" Title="Partido polÃ­tico"/>
        <TemplateColumn>
            <FluentButton aria-label="Consultar presidente" IconEnd="@(new Icons.Filled.Size16.Eye())" OnClick="@(() => NavMgr.NavigateTo($"{PageRoutes.Presidents}/{context.Id}"))">Consultar</FluentButton> 
        </TemplateColumn>
    </FluentDataGrid>
    <PaginationComponent Pagination="@Pagination"/>
}
else
{
    <Loading/>
}